<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GPT-2 on Max Woolf&#39;s Blog</title><link>https://minimaxir.com/tags/gpt-2/</link><description>Recent content in GPT-2 on Max Woolf&#39;s Blog</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright Max Woolf &amp;copy; {year}</copyright><lastBuildDate>Mon, 30 Sep 2019 08:00:00 -0700</lastBuildDate><atom:link href="https://minimaxir.com/tags/gpt-2/index.xml" rel="self" type="application/rss+xml"/><item><title>Experiments with Making Convincing AI-Generated Fake News</title><link>https://minimaxir.com/2019/09/ctrl-fake-news/</link><pubDate>Mon, 30 Sep 2019 08:00:00 -0700</pubDate><guid>https://minimaxir.com/2019/09/ctrl-fake-news/</guid><description>
&lt;p&gt;&lt;span&gt;&lt;style&gt;
blockquote {
padding-right: 1.25em !important;
}
&lt;/style&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/ctrl-fake-news/ctrl_demo_ani.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When &lt;a href=&#34;https://openai.com&#34; target=&#34;_blank&#34;&gt;OpenAI&lt;/a&gt; announced &lt;a href=&#34;https://openai.com/blog/better-language-models/&#34; target=&#34;_blank&#34;&gt;GPT-2&lt;/a&gt;, a robust text-generating AI model, they explicitly only released smaller, less robust versions of the model out of fear that the large model could be used to generate fake news. However, since OpenAI described most of the technical decisions needed to create the model &lt;a href=&#34;https://d4mucfpksywv.cloudfront.net/better-language-models/language_models_are_unsupervised_multitask_learners.pdf&#34; target=&#34;_blank&#34;&gt;in the corresponding paper&lt;/a&gt;, it would be possible for others to create their own text generating Transformer models, and maybe even &lt;em&gt;improve&lt;/em&gt; on GPT-2 (with a sufficient budget!).&lt;/p&gt;
&lt;p&gt;In September, the &lt;a href=&#34;https://www.salesforce.com&#34; target=&#34;_blank&#34;&gt;Salesforce&lt;/a&gt; AI team released &lt;a href=&#34;https://github.com/salesforce/ctrl&#34; target=&#34;_blank&#34;&gt;CTRL&lt;/a&gt;, a Transformer-based text generating model with a twist; the model can generate text from specified domains by passing &lt;strong&gt;control codes&lt;/strong&gt; to the model. What caught my interest was a demo of domain style transfer in the &lt;a href=&#34;https://arxiv.org/abs/1909.05858&#34; target=&#34;_blank&#34;&gt;CTRL paper&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/ctrl-fake-news/ctrl_paper.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If the model is that robust to minor URL changes, what happens when you give it URLs that blatantly do not exist? Can the CTRL model create the &amp;ldquo;fake news&amp;rdquo; OpenAI was concerned about? Let&amp;rsquo;s put it to the test.&lt;/p&gt;
&lt;h2 id=&#34;an-overview-of-ctrl&#34;&gt;An Overview of CTRL&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;https://github.com/minimaxir/ctrl-gce&#34; target=&#34;_blank&#34;&gt;written a guide + scripts&lt;/a&gt; to setting the base CTRL model as cheaply as possible on Google Compute Engine with just a few commands. Additionally, the CTRL team has released a &lt;a href=&#34;https://colab.research.google.com/drive/1hVveBQShDru1Mjnhe4C21uQv4A2eH1tV&#34; target=&#34;_blank&#34;&gt;free Colaboratory Notebook&lt;/a&gt; which sets up and runs the CTRL model; however, the model is &lt;em&gt;so large&lt;/em&gt; it won&amp;rsquo;t fit into the memory of traditional GPUs, so the notebook does a trick to shrink it a bit which may impact generation performance.&lt;/p&gt;
&lt;p&gt;Like GPT-2, CTRL has a &lt;a href=&#34;https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html&#34; target=&#34;_blank&#34;&gt;Transformer&lt;/a&gt; architecture based on &lt;a href=&#34;https://www.tensorflow.org&#34; target=&#34;_blank&#34;&gt;TensorFlow&lt;/a&gt; and uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Byte_pair_encoding&#34; target=&#34;_blank&#34;&gt;byte pair encodings&lt;/a&gt; as its inputs and outputs, which are then decoded into readable text. CTRL has notable performance improvements as it&amp;rsquo;s trained on &lt;em&gt;three times as much data as GPT-2&lt;/em&gt;, including an &lt;a href=&#34;https://github.com/jcpeterson/openwebtext&#34; target=&#34;_blank&#34;&gt;open-sourced clone&lt;/a&gt; of GPT-2&amp;rsquo;s original dataset. And of course, it&amp;rsquo;s larger (1.6B hyperparameters) compared to the currently public GPT-2 (774M hyperparameters), which has significant effects on text quality.&lt;/p&gt;
&lt;p&gt;Most importantly, CTRL &lt;em&gt;requires&lt;/em&gt; a control code if you want to generate text, which allows for more deterministic output compared to GPT-2/&lt;a href=&#34;https://talktotransformer.com&#34; target=&#34;_blank&#34;&gt;TalkToTransformer&lt;/a&gt;. There are several fun control codes, such as &lt;code&gt;Questions&lt;/code&gt; if you want to ask the AI a question, or &lt;code&gt;Reviews&lt;/code&gt; if you want the AI to generate an &lt;a href=&#34;https://www.amazon.com&#34; target=&#34;_blank&#34;&gt;Amazon&lt;/a&gt; review. For this, we&amp;rsquo;ll only look at the &lt;code&gt;Links&lt;/code&gt; control code, which lets you provide a URL and/or a prompt for text generation.&lt;/p&gt;
&lt;p&gt;As the example from the paper shows, URLs contain a surprising amount of metadata. For example, let&amp;rsquo;s consider a &lt;a href=&#34;https://www.washingtonpost.com/powerpost/deal-reached-for-whistleblowers-testimony-house-intelligence-chairman-says/2019/09/29/01cade60-e2d1-11e9-b403-f738899982d2_story.html&#34; target=&#34;_blank&#34;&gt;random Washington Post URL&lt;/a&gt;: &lt;code&gt;https://www.washingtonpost.com/powerpost/deal-reached-for-whistleblowers-testimony-house-intelligence-chairman-says/2019/09/29/01cade60-e2d1-11e9-b403-f738899982d2_story.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s month/day/year information (&lt;code&gt;2019/09/29&lt;/code&gt;), a category (&lt;code&gt;powerpost&lt;/code&gt;), and a &lt;a href=&#34;https://en.wikipedia.org/wiki/Clean_URL#Slug&#34; target=&#34;_blank&#34;&gt;URL slug&lt;/a&gt; (&lt;code&gt;deal-reached-for-whistleblowers-testimony-house-intelligence-chairman-says&lt;/code&gt;), typically present for SEO reasons, but in this case provides strong hints to the underlying content. The Transformer architecture is &lt;em&gt;surprisingly&lt;/em&gt; effective at extracting all this metadata, and using it to generate appropriate text.&lt;/p&gt;
&lt;h2 id=&#34;examples-of-fake-news&#34;&gt;Examples of Fake News&lt;/h2&gt;
&lt;p&gt;All of the following examples are generated using the full model with the default settings: 256 token length and a temperature of 0 (i.e. the model always selects the next token with the highest probability). I manually truncate the output once it finishes, but other than that, &lt;strong&gt;these AI-generated articles are not edited&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s address the elephant in the room: when people think of &amp;ldquo;fake news&amp;rdquo;, they think of President Donald Trump, who effectively codified the modern usage of the term. So let&amp;rsquo;s generate a fake news story about him with an innocuous topic rarely associated with him. For example, the video gaming phenomenon &lt;a href=&#34;https://www.epicgames.com/fortnite/home&#34; target=&#34;_blank&#34;&gt;Fortnite&lt;/a&gt;. All that&amp;rsquo;s needed is to tweak the slug (and optionally the date) in the earlier WaPo URL a bit and prepend the corresponding control code, resulting in &lt;code&gt;Links https://www.washingtonpost.com/powerpost/trump-likes-fortnite/2019/09/24/&lt;/code&gt;. Feed it to the model, and behold!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Trump likes Fortnite&lt;/p&gt;
&lt;p&gt;President Trump, who has been known to play video games for hours at a time, is now playing the popular game “Fortnite” on his phone.&lt;/p&gt;
&lt;p&gt;The president was spotted watching the online battle royale game, which pits players against each other in an attempt to kill their opponents, while he sat down with House and Senate leaders Tuesday afternoon.&lt;/p&gt;
&lt;p&gt;“I like that it’s not just about shooting people but also having fun doing it,” said Trump.&lt;/p&gt;
&lt;p&gt;He then asked if anyone had played it before.&lt;/p&gt;
&lt;p&gt;“You know what, I don’t think I’ve ever seen that,” replied Rep. Steve Scalise, R-La.&lt;/p&gt;
&lt;p&gt;A White House official told reporters later Wednesday afternoon that Trump did indeed watch the game.&lt;/p&gt;
&lt;p&gt;“He watched it, yeah,” the official said.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The generated article is very realistic and follows the style of a typical WaPo article (lede, introduction, body, support, etc.), with proper descriptions of Trump and Fortnite, plus a story that matches the headline. Like GPT-2, there are redundancies in the generation (at the end), but it&amp;rsquo;s not something most readers would find suspicious in a casual read.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s tweak things a little. Instead of using &lt;code&gt;likes&lt;/code&gt; in the slug, what if we use &lt;code&gt;despises&lt;/code&gt;, so &lt;code&gt;trump-despises-fortnite&lt;/code&gt;. How well does the model adapt?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Trump despises Fortnite&lt;/p&gt;
&lt;p&gt;The president of the United States has a new favorite video game: “Fortnite.”&lt;/p&gt;
&lt;p&gt;President Trump, who is known for his love of fast food and beer, was reportedly so excited about playing this game that he called it “the greatest thing in the world.”&lt;/p&gt;
&lt;p&gt;But according to an Axios report, Trump’s enthusiasm waned after learning how much time players spend on it.&lt;/p&gt;
&lt;p&gt;“He said it’s not even close to being as good as ‘Candy Crush,’ ” one source told the news outlet.&lt;/p&gt;
&lt;p&gt;In fact, the report said, Trump had been watching videos online while eating dinner with Japanese Prime Minister Shinzo Abe at Mar-a-Lago.&lt;/p&gt;
&lt;p&gt;According to Axios, Trump also complained about the game’s difficulty level — which can be adjusted by spending real money or virtual currency — saying it wasn’t challenging enough.&lt;/p&gt;
&lt;p&gt;“I don’t know why they made it hard,” Trump said.&lt;/p&gt;
&lt;p&gt;He then went off topic when asked if he’d play again.&lt;/p&gt;
&lt;p&gt;“No, I won’t.”&lt;/p&gt;
&lt;p&gt;A White House official later clarified that Trump didn’t say he wouldn’t play, but rather that he’s “not into it.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It adapts very well to the change in tone (even with a rhetorical lede!).&lt;/p&gt;
&lt;p&gt;Fake news doesn&amp;rsquo;t have to be politically-based. Such news in the financial sector could cause just as much chaos. What if it was reported that &lt;a href=&#34;https://www.apple.com&#34; target=&#34;_blank&#34;&gt;Apple&lt;/a&gt;, one of the largest companies in the world, went bankrupt? Put in &lt;code&gt;Links https://www.theverge.com/2019/2/24/20882491/apple-has-filed-for-bankruptcy&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apple has filed for bankruptcy.&lt;/p&gt;
&lt;p&gt;The company that made the iPhone and iPad is filing for bankruptcy, according to a report from Bloomberg.&lt;/p&gt;
&lt;p&gt;According to Bloomberg News, Apple&amp;rsquo;s board of directors voted unanimously on Friday morning in favor of an emergency plan designed to keep it afloat until its next quarterly earnings report.&lt;/p&gt;
&lt;p&gt;In order to avoid paying more than $128 million in back taxes, Apple will have to sell off assets like its Beats headphone business, which was valued at about $1 billion when it went public last year.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Apple said today that it plans to file for Chapter 11 protection under US Bankruptcy Court in Delaware this week,&amp;rdquo; Bloomberg reports.&lt;/p&gt;
&lt;p&gt;A source familiar with the matter told Reuters earlier this week that Apple had been considering selling some or all of its music streaming service iTunes Music Store as part of a restructuring plan.&lt;/p&gt;
&lt;p&gt;But the news comes just days after reports surfaced suggesting that Apple would be forced into liquidation.&lt;/p&gt;
&lt;p&gt;Last week, Bloomberg reported that Apple could soon announce layoffs if sales don&amp;rsquo;t pick up soon.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;We are working hard every day to deliver great products and services to our customers around the world,&amp;rdquo; Tim Cook, CEO of Apple, wrote in a letter to employees today.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, the model incorporates both bankruptcy terminology and Apple-based entities. There are minor factual errors (Beats is not public, Apple is not incorporated in Delaware), but casual readers would likely scan over that.&lt;/p&gt;
&lt;p&gt;Science is also a field with lots of fake discoveries. What if AI reported that &lt;a href=&#34;https://en.wikipedia.org/wiki/P_versus_NP_problem&#34; target=&#34;_blank&#34;&gt;P versus NP&lt;/a&gt;, a very famous problem in computer science, was finally solved? Let&amp;rsquo;s try &lt;code&gt;Links https://techcrunch.com/2029/09/24/mit-proves-p-equals-np&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MIT proves P equals NP&lt;/p&gt;
&lt;p&gt;The University of Massachusetts Amherst has proven that the problem posed by factoring large numbers is NP-complete.&lt;/p&gt;
&lt;p&gt;In a paper published in Nature, researchers at MIT’s Computer Science and Artificial Intelligence Laboratory (CSAIL) have shown how to factor an integer using only two numbers, one for each digit — which means it takes just three operations on your brain.&lt;/p&gt;
&lt;p&gt;This isn’t quite as impressive as solving the problem, but it’s still pretty impressive.&lt;/p&gt;
&lt;p&gt;“Given any number n, we can find its product n times with polynomial time if there are no factors involved,” said lead author David DeWitt, who worked on this project while he was a graduate student there.&lt;/p&gt;
&lt;p&gt;But what about factorizing larger numbers?&lt;/p&gt;
&lt;p&gt;“We showed you could do it, but not without some extra effort,” DeWitt said.&lt;/p&gt;
&lt;p&gt;To prove this, they used a technique called Monte Carlo integration, where they simulated millions or billions of different inputs from thousands of computers running various versions of Java.&lt;/p&gt;
&lt;p&gt;They then ran their algorithm through all possible combinations of input values until it found the best one.&lt;/p&gt;
&lt;p&gt;“The result shows that even though our system doesn’t solve every single case, it does get close enough to be useful.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This instance is less factually correct (and it&amp;rsquo;s clickbaity!), but the topic behind the generated text is &lt;em&gt;complicated&lt;/em&gt; enough that only domain experts would be able to tell it&amp;rsquo;s not internally consistent.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also worth pointing out now that &lt;em&gt;the majority of the text generated so far is unique&lt;/em&gt;, and CTRL is not cheating by just outputting text from the source datasets. Even though Monte Carlo integration is &lt;a href=&#34;https://en.wikipedia.org/wiki/Monte_Carlo_integration&#34; target=&#34;_blank&#34;&gt;indeed a real thing&lt;/a&gt; that&amp;rsquo;s relatively obscure, Googling that description of it fails to turn up results.&lt;/p&gt;
&lt;p&gt;Lastly, fake news doesn&amp;rsquo;t have to be depressing or sow discord. What about &lt;em&gt;wholesome&lt;/em&gt; fake news? Such as&amp;hellip;the return of beloved television series &lt;a href=&#34;https://en.wikipedia.org/wiki/Firefly_(TV_series)&#34; target=&#34;_blank&#34;&gt;Firefly&lt;/a&gt;? One &lt;code&gt;Links https://www.hollywoodreporter.com/live-feed/fox-announces-firefly-season-2-revival-original-cast-returning-12343245&lt;/code&gt; later:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fox announces Firefly Season 2 revival, original cast returning&lt;/p&gt;
&lt;p&gt;The network has announced that the second season of Joss Whedon’s cult sci-fi series will return for a new run in 2018.&lt;/p&gt;
&lt;p&gt;“Fans have been asking us to bring back Firefly, and we couldn’t be more thrilled about this opportunity,” said Chris Albrecht, president of programming at Fox. “We are excited to continue our relationship with Joss, who is one of the most creative minds working today on television, as well as his amazing cast, which includes Nathan Fillion, Summer Glau, Alan Tudyk, Adam Baldwin, Sean Maher, Adrianne Palicki, Tricia Helfer, Jewel Staite, Michael Trucco, and many more.”&lt;/p&gt;
&lt;p&gt;In addition to Whedon himself, executive producers include Damon Lindelof, Maurissa Tancharoen, Vince Gilligan, David Fury, Jeffrey Bell, Greg Plageman, Scott M. Gimple, Heather Kadin, Andrew Chambliss, John Rogers, and Ron Moore.&lt;/p&gt;
&lt;p&gt;“The show was an instant hit when it debuted over 20 years ago, but its popularity only grew after the success of ‘Serenity,’ so we’re very pleased to welcome fans into another chapter of their lives,” added Feige.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That is a &lt;em&gt;very&lt;/em&gt; stacked cast and crew, all of which (besides the original Firefly members) have acted/worked on sci-fi television series. The only major factual errors are that Chris Albrecht was at STARZ, not Fox, and Feige, presumably Kevin Feige of Marvel Studios, is not mentioned previously in the generated article.&lt;/p&gt;
&lt;p&gt;I know I&amp;rsquo;ll get criticism for highlighting a potentially dangerous application of AI text generation. My perspective is that it&amp;rsquo;s important to know what such tools are &lt;em&gt;capable&lt;/em&gt; of doing in order to more easily recognize fake news. The real problem with fake news isn&amp;rsquo;t the text itself: it&amp;rsquo;s the &lt;em&gt;distribution&lt;/em&gt; of the news on social media like &lt;a href=&#34;http://www.facebook.com&#34; target=&#34;_blank&#34;&gt;Facebook&lt;/a&gt; and &lt;a href=&#34;https://twitter.com&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt;, where the platforms not only &lt;em&gt;incentivize&lt;/em&gt; it, but also fail to sufficiently punish deliberate, repeat offenders. It&amp;rsquo;s why journalism and awareness of fake news is extremely important.&lt;/p&gt;
&lt;p&gt;Some might comment &amp;ldquo;these generated texts aren&amp;rsquo;t convincing at all!&amp;rdquo;, but keep in mind that&amp;rsquo;s because the headline says upfront that they&amp;rsquo;re fake. Would you be able to identify it as a fake if a respected source impulsively tweeted it?&lt;/p&gt;</description></item><item><title>How To Make Custom AI-Generated Text With GPT-2</title><link>https://minimaxir.com/2019/09/howto-gpt2/</link><pubDate>Wed, 04 Sep 2019 08:00:00 -0700</pubDate><guid>https://minimaxir.com/2019/09/howto-gpt2/</guid><description>
&lt;p&gt;In February 2019, &lt;a href=&#34;https://openai.com&#34; target=&#34;_blank&#34;&gt;OpenAI&lt;/a&gt; released &lt;a href=&#34;https://openai.com/blog/better-language-models/&#34; target=&#34;_blank&#34;&gt;a paper&lt;/a&gt; describing GPT-2, a AI-based text-generation model based on the &lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34; target=&#34;_blank&#34;&gt;Transformer architecture&lt;/a&gt; and trained on massive amounts of text all around the internet. From a text-generation perspective, the included demos were very impressive: the text is coherent over a long horizon, and grammatical syntax and punctuation are near-perfect.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/openai-demo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;At the same time, the Python code which allowed anyone to download the model (albeit smaller versions out of concern the full model can be abused to mass-generate fake news) and the &lt;a href=&#34;https://www.tensorflow.org&#34; target=&#34;_blank&#34;&gt;TensorFlow&lt;/a&gt; code to load the downloaded model and generate predictions was &lt;a href=&#34;https://github.com/openai/gpt-2&#34; target=&#34;_blank&#34;&gt;open-sourced on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Neil Shepperd created &lt;a href=&#34;https://github.com/nshepperd/gpt-2&#34; target=&#34;_blank&#34;&gt;a fork&lt;/a&gt; of OpenAI&amp;rsquo;s repo which contains additional code to allow &lt;em&gt;finetuning&lt;/em&gt; the existing OpenAI model on custom datasets. A &lt;a href=&#34;https://github.com/ak9250/gpt-2-colab&#34; target=&#34;_blank&#34;&gt;notebook&lt;/a&gt; was created soon after, which can be copied into &lt;a href=&#34;https://colab.research.google.com&#34; target=&#34;_blank&#34;&gt;Google Colaboratory&lt;/a&gt; and clones Shepperd&amp;rsquo;s repo to finetune GPT-2 backed by a free GPU. From there, the proliferation of GPT-2 generated text took off: researchers such as Gwern Branwen made &lt;a href=&#34;https://www.gwern.net/GPT-2&#34; target=&#34;_blank&#34;&gt;GPT-2 Poetry&lt;/a&gt; and Janelle Shane made &lt;a href=&#34;https://aiweirdness.com/post/183471928977/dd-character-bios-now-making-slightly-more&#34; target=&#34;_blank&#34;&gt;GPT-2 Dungeons and Dragons character bios&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I waited to see if anyone would make a tool to help streamline this finetuning and text generation workflow, a la &lt;a href=&#34;https://github.com/minimaxir/textgenrnn&#34; target=&#34;_blank&#34;&gt;textgenrnn&lt;/a&gt; which I had made for recurrent neural network-based text generation. Months later, no one did. So I did it myself. Enter &lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34; target=&#34;_blank&#34;&gt;gpt-2-simple&lt;/a&gt;, a Python package which wraps Shepperd&amp;rsquo;s finetuning code in a functional interface and adds &lt;em&gt;many&lt;/em&gt; utilities for model management and generation control.&lt;/p&gt;
&lt;p&gt;Thanks to gpt-2-simple and &lt;a href=&#34;https://colab.research.google.com/drive/1VLG8e7YSEwypxU-noRNhsv5dW4NfTGce&#34; target=&#34;_blank&#34;&gt;this Colaboratory Notebook&lt;/a&gt;, you can easily finetune GPT-2 on your own dataset with a simple function, and generate text to your own specifications!&lt;/p&gt;
&lt;h2 id=&#34;how-gpt-2-works&#34;&gt;How GPT-2 Works&lt;/h2&gt;
&lt;p&gt;OpenAI has released three flavors of GPT-2 models to date: the &amp;ldquo;small&amp;rdquo; 124M parameter model (500MB on disk), the &amp;ldquo;medium&amp;rdquo; 355M model (1.5GB on disk), and recently the 774M model (3GB on disk). These models are &lt;em&gt;much&lt;/em&gt; larger than what you see in typical AI tutorials and are harder to wield: the &amp;ldquo;small&amp;rdquo; model hits GPU memory limits while finetuning with consumer GPUs, the &amp;ldquo;medium&amp;rdquo; model requires additional training techniques before it could be finetuned on server GPUs without going out-of-memory, and the &amp;ldquo;large&amp;rdquo; model &lt;em&gt;cannot be finetuned at all&lt;/em&gt; with current server GPUs before going OOM, even with those techniques.&lt;/p&gt;
&lt;p&gt;The actual Transformer architecture GPT-2 uses is very complicated to explain (here&amp;rsquo;s a &lt;a href=&#34;http://www.peterbloem.nl/blog/transformers&#34; target=&#34;_blank&#34;&gt;great lecture&lt;/a&gt;). For the purposes of finetuning, since we can&amp;rsquo;t modify the architecture, it&amp;rsquo;s easier to think of GPT-2 as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Black_box&#34; target=&#34;_blank&#34;&gt;black box&lt;/a&gt;, taking in inputs and providing outputs. Like &lt;a href=&#34;http://karpathy.github.io/2015/05/21/rnn-effectiveness/&#34; target=&#34;_blank&#34;&gt;previous forms of text generators&lt;/a&gt;, the inputs are a sequence of tokens, and the outputs are the probability of the next token in the sequence, with these probabilities serving as weights for the AI to pick the next token in the sequence. In this case, both the input and output tokens are &lt;a href=&#34;https://en.wikipedia.org/wiki/Byte_pair_encoding&#34; target=&#34;_blank&#34;&gt;byte pair encodings&lt;/a&gt;, which instead of using character tokens (slower to train but includes case/formatting) or word tokens (faster to train but does not include case/formatting) like most RNN approaches, the inputs are &amp;ldquo;compressed&amp;rdquo; to the shortest combination of bytes including case/formatting, which serves as a compromise between both approaches but unfortunately adds randomness to the final generation length. The byte pair encodings are later decoded into readable text for human generation.&lt;/p&gt;
&lt;p&gt;The pretrained GPT-2 models were trained on websites linked from &lt;a href=&#34;https://www.reddit.com&#34; target=&#34;_blank&#34;&gt;Reddit&lt;/a&gt;. As a result, the model has a very strong grasp of the English language, allowing this knowledge to transfer to other datasets and perform well with only a minor amount of additional finetuning. Due to the English bias in encoder construction, languages with non-Latin characters like Russian and &lt;a href=&#34;https://en.wikipedia.org/wiki/CJK_characters&#34; target=&#34;_blank&#34;&gt;CJK&lt;/a&gt; will perform poorly in finetuning.&lt;/p&gt;
&lt;p&gt;When finetuning GPT-2, I recommend using the 124M model (the default) as it&amp;rsquo;s the best balance of speed, size, and creativity. If you have large amounts of training data (&amp;gt;10 MB), then the 355M model may work better.&lt;/p&gt;
&lt;h2 id=&#34;gpt-2-simple-and-colaboratory&#34;&gt;gpt-2-simple And Colaboratory&lt;/h2&gt;
&lt;p&gt;In order to better utilize gpt-2-simple and showcase its features, I created my &lt;a href=&#34;https://colab.research.google.com/drive/1VLG8e7YSEwypxU-noRNhsv5dW4NfTGce&#34; target=&#34;_blank&#34;&gt;own Colaboratory Notebook&lt;/a&gt;, which can be copied into your own Google account. A Colaboratory Notebook is effectively a &lt;a href=&#34;https://jupyter.org&#34; target=&#34;_blank&#34;&gt;Jupyter Notebook&lt;/a&gt; running on a free (w/ a Google Account) virtual machine with an Nvidia server GPU attached (&lt;a href=&#34;https://twitter.com/BasedBlue/status/1164732922953379841&#34; target=&#34;_blank&#34;&gt;randomly&lt;/a&gt; a K80 or a T4; T4 is ideal) that normally can be cost-prohibitive.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/gpu.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Once open, the first cell (run by pressing Shift+Enter in the cell or mousing-over the cell and pressing the &amp;ldquo;Play&amp;rdquo; button) of the notebook installs gpt-2-simple and its dependencies, and loads the package.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/imports.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Later in the notebook is &lt;code&gt;gpt2.download_gpt2()&lt;/code&gt; which downloads the requested model type to the Colaboratory VM (the models are hosted on Google&amp;rsquo;s servers, so it&amp;rsquo;s a &lt;em&gt;very&lt;/em&gt; fast download).&lt;/p&gt;
&lt;p&gt;Expanding the Colaboratory sidebar reveals a UI that you can use to upload files. For example, the &lt;a href=&#34;https://raw.githubusercontent.com/karpathy/char-rnn/master/data/tinyshakespeare/input.txt&#34; target=&#34;_blank&#34;&gt;tinyshakespeare dataset&lt;/a&gt; (1MB) provided with the original &lt;a href=&#34;https://github.com/karpathy/char-rnn&#34; target=&#34;_blank&#34;&gt;char-rnn implementation&lt;/a&gt;. Upload a text file via the UI (you can drag and drop), run the &lt;code&gt;file_name = &#39;&amp;lt;xxx&amp;gt;&#39;&lt;/code&gt; cell with your filename changed in the cell.&lt;/p&gt;
&lt;p&gt;Now we can start finetuning! This finetuning cell loads the specified dataset and trains for the specified number of steps (the default of 1,000 steps is enough to allow distinct text to emerge and takes about 45 minutes, but you can increase the number of steps if necessary).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/finetuning.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While the model is finetuning, the average training loss is output every-so-often to the cell. The &lt;em&gt;absolute value&lt;/em&gt; of the loss is not important (the output text quality is subjective), but if the average loss stops decreasing, that&amp;rsquo;s a sign the model has converged and additional training may not help improve the model.&lt;/p&gt;
&lt;p&gt;By default, your model is saved in the &lt;code&gt;checkpoint/run1&lt;/code&gt; folder, and you&amp;rsquo;ll need to use that folder to load the model as well (you can specify the &lt;code&gt;run_name&lt;/code&gt; when using other functions categorize finetuned models). If you want to export the model from Colaboratory, it&amp;rsquo;s recommended you do so via &lt;a href=&#34;https://www.google.com/drive/&#34; target=&#34;_blank&#34;&gt;Google Drive&lt;/a&gt; (as Colaboratory does not like exporting large files). Run the &lt;code&gt;gpt2.mount_gdrive()&lt;/code&gt; cell to mount your Google Drive in the Colaboratory VM, then run the &lt;code&gt;gpt2.copy_checkpoint_to_gdrive()&lt;/code&gt; cell. You can then download the compressed model folder from Google Drive and run the model wherever you want. Likewise, you can use the &lt;code&gt;gpt2.copy_checkpoint_from_gdrive()&lt;/code&gt; cell to retrieve a stored model and generate in the notebook.&lt;/p&gt;
&lt;p&gt;Speaking of generation, once you have a finetuned model, you can now generate custom text from it! By default, the &lt;code&gt;gpt2.generate()&lt;/code&gt; function will generate as much text as possible (1,024 tokens) with a little bit of randomness. An important caveat: &lt;em&gt;you will not get good generated text 100% of the time&lt;/em&gt;, even with a properly trained model (the OpenAI demo above took &lt;em&gt;25 tries&lt;/em&gt; to get good text!).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/gen_long.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can also increase the &lt;code&gt;temperature&lt;/code&gt; to increase &amp;ldquo;creativity&amp;rdquo; by allowing the network to more likely make suboptimal predictions, provide a &lt;code&gt;prefix&lt;/code&gt; to specify how exactly you want your text to begin. There are many other useful configuration parameters, such as &lt;code&gt;top_p&lt;/code&gt; for &lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple/issues/51&#34; target=&#34;_blank&#34;&gt;nucleus sampling&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/gen_long_params.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As a bonus, you can bulk-generate text with gpt-2-simple by setting &lt;code&gt;nsamples&lt;/code&gt; (number of texts to generate total) and &lt;code&gt;batch_size&lt;/code&gt; (number of texts to generate at a time); the Colaboratory GPUs can support a &lt;code&gt;batch_size&lt;/code&gt; of up to 20, and you can generate these to a text file with &lt;code&gt;gpt2.generate_to_file(file_name)&lt;/code&gt; with the same parameters as &lt;code&gt;gpt2.generate()&lt;/code&gt;. You can download the generated file locally via the sidebar, and use those to easily save and share the generated texts.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1VLG8e7YSEwypxU-noRNhsv5dW4NfTGce&#34; target=&#34;_blank&#34;&gt;The notebook&lt;/a&gt; has many more functions as well, with more parameters and detailed explanations! The &lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34; target=&#34;_blank&#34;&gt;gpt-2-simple README&lt;/a&gt; lists additional features of gpt-2-simple if you want to use the model outside the notebook.&lt;/p&gt;
&lt;p&gt;(NB: Currently, you&amp;rsquo;ll need to reset the Notebook via Runtime → Restart Runtime to finetune a different model/dataset or load a different finetuned model.)&lt;/p&gt;
&lt;h2 id=&#34;gpt-2-for-short-texts&#34;&gt;GPT-2 For Short Texts&lt;/h2&gt;
&lt;p&gt;A weakness of GPT-2 and other out-of-the-box AI text generators is that they are built for longform content, and keep on generating text until you hit the specified length. Another reason I wanted to make gpt-2-simple was to add explicit processing tricks to the generated text to work around this issue for short texts. In this case, there are two additional parameters that can be passed to &lt;code&gt;gpt2.generate()&lt;/code&gt;: &lt;code&gt;truncate&lt;/code&gt; and &lt;code&gt;include_prefix&lt;/code&gt;. For example, if each short text begins with a &lt;code&gt;&amp;lt;|startoftext|&amp;gt;&lt;/code&gt; token and ends with a &lt;code&gt;&amp;lt;|endoftext|&amp;gt;&lt;/code&gt;, then setting &lt;code&gt;prefix=&#39;&amp;lt;|startoftext|&amp;gt;&#39;&lt;/code&gt;, &lt;code&gt;truncate=&amp;lt;|endoftext|&amp;gt;&#39;&lt;/code&gt;, and &lt;code&gt;include_prefix=False&lt;/code&gt;, and &lt;code&gt;length&lt;/code&gt; is sufficient, then gpt-2-simple will automatically extract the shortform texts, even when generating in batches.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s finetune a GPT-2 model on Reddit submission titles. This query, when run on &lt;a href=&#34;https://console.cloud.google.com/bigquery&#34; target=&#34;_blank&#34;&gt;BigQuery&lt;/a&gt; (for free), returns the top 16,000 titles by score between January and March 2019 for a given Reddit subreddit (in this case, &lt;a href=&#34;https://www.reddit.com/r/AskReddit/&#34; target=&#34;_blank&#34;&gt;/r/AskReddit&lt;/a&gt;) + minor text preprocessing, which can be downloaded locally as a 1.3 MB CSV (Save Results → CSV [local file]):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;#standardSQL
SELECT
REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(title, &#39;&amp;amp;amp;&#39;, &#39;&amp;amp;&#39;), &#39;&amp;amp;lt;&#39;, &#39;&amp;lt;&#39;), &#39;&amp;amp;gt;&#39;, &#39;&amp;gt;&#39;), &#39;�&#39;, &#39;&#39;) AS title
FROM
`fh-bigquery.reddit_posts.*`
WHERE
_TABLE_SUFFIX BETWEEN &#39;2019_01&#39; AND &#39;2019_03&#39;
AND LENGTH(title) &amp;gt;= 8
AND LOWER(subreddit) = &#39;askreddit&#39;
ORDER BY
score DESC
LIMIT
16000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With gpt-2-simple, using a single-column CSV like the one generated above as the input dataset will automatically add &lt;code&gt;&amp;lt;|startoftext|&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;|endoftext|&amp;gt;&lt;/code&gt; tokens appropriately. Finetune a new GPT-2 model as normal, and then generate with those additional parameters mentioned above:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/gen_short.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth noting that despite a good amount of input data to the model, finetuned networks can easily &lt;em&gt;overfit&lt;/em&gt; on short form text: some of these example titles are very close to existing /r/AskReddit titles. Overfitting can be rectified by training for less time, or adding more input data. Make sure to double check that your generated text is unique!&lt;/p&gt;
&lt;p&gt;You can play with this Reddit-oriented variant in &lt;a href=&#34;https://colab.research.google.com/drive/1RugXCYDcMvSACYNt9j0kB6zzqRKzAbBn&#34; target=&#34;_blank&#34;&gt;this modified Colaboratory Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;making-gpt-2-apps&#34;&gt;Making GPT-2 Apps&lt;/h2&gt;
&lt;p&gt;There have already been cool, non-nefarious uses of GPT-2, such as Adam King&amp;rsquo;s &lt;a href=&#34;https://talktotransformer.com&#34; target=&#34;_blank&#34;&gt;TalkToTransformer&lt;/a&gt; which provides a UI for the 774M model (and has gone viral many times) and &lt;a href=&#34;https://tabnine.com&#34; target=&#34;_blank&#34;&gt;TabNine&lt;/a&gt;, which uses GPT-2 finetuned on GitHub code in order to create probabilistic code completion. On the &lt;a href=&#34;https://pytorch.org&#34; target=&#34;_blank&#34;&gt;PyTorch&lt;/a&gt; side, Huggingface has released a &lt;a href=&#34;https://github.com/huggingface/pytorch-transformers&#34; target=&#34;_blank&#34;&gt;Transformers client&lt;/a&gt; (w/ GPT-2 support) of their own, and also created apps such as &lt;a href=&#34;https://transformer.huggingface.co&#34; target=&#34;_blank&#34;&gt;Write With Transformer&lt;/a&gt; to serve as a text autocompleter.&lt;/p&gt;
&lt;p&gt;Many AI tutorials often show how to deploy a small model to a web service by using the &lt;a href=&#34;https://palletsprojects.com/p/flask/&#34; target=&#34;_blank&#34;&gt;Flask&lt;/a&gt; application framework. The problem with GPT-2 is that it&amp;rsquo;s such a huge model that most conventional advice won&amp;rsquo;t work well to get a performant app. And even if you do get it to run fast (e.g. by running the app on a GPU), it won&amp;rsquo;t be &lt;em&gt;cheap&lt;/em&gt;, especially if you want it to be resilient to a random surge of virality.&lt;/p&gt;
&lt;p&gt;With gpt-2-simple, the solution I came up with is &lt;a href=&#34;https://github.com/minimaxir/gpt-2-cloud-run&#34; target=&#34;_blank&#34;&gt;gpt-2-cloud-run&lt;/a&gt;; a small webapp intended to run GPT-2 via &lt;a href=&#34;https://cloud.google.com/run/&#34; target=&#34;_blank&#34;&gt;Google Cloud Run&lt;/a&gt; backed by gpt-2-simple. The advantage here is that Cloud Run only charges for compute used and can scale indefinitely if there&amp;rsquo;s a traffic surge; for casual use, it&amp;rsquo;s extremely cost effective compared to running a GPU 24/7. I&amp;rsquo;ve used Cloud Run to make a GPT-2 text generator for &lt;a href=&#34;https://minimaxir.com/apps/gpt2-reddit/&#34; target=&#34;_blank&#34;&gt;Reddit-wide submission titles&lt;/a&gt; and a GPT-2 generator for &lt;a href=&#34;https://minimaxir.com/apps/gpt2-mtg/&#34; target=&#34;_blank&#34;&gt;Magic: The Gathering cards&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://minimaxir.com/img/howto-gpt2/mtg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;attributing-ai-generated-text&#34;&gt;Attributing AI-Generated Text&lt;/h2&gt;
&lt;p&gt;One of the main reasons I developed textgenrnn and gpt-2-simple is to make AI text generation more &lt;em&gt;accessible&lt;/em&gt; as you do not need a strong AI or technical background to create fun stories. However, in the case of GPT-2, I&amp;rsquo;ve noticed an elevated amount of &amp;ldquo;I trained an AI to generate text&amp;rdquo; articles/Reddit posts/YouTube videos saying they used GPT-2 to train an AI, but not &lt;em&gt;how&lt;/em&gt; they trained the AI: especially suspicious since finetuning is not an out-of-the-box feature that OpenAI provides. The fact that Keaton Patti&amp;rsquo;s &lt;a href=&#34;https://twitter.com/KeatonPatti/status/1161284670601990146&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;I forced a bot&amp;rdquo; movie scripts&lt;/a&gt; (that aren&amp;rsquo;t written by a bot) frequently go megaviral due to that particular framing doesn&amp;rsquo;t help.&lt;/p&gt;
&lt;p&gt;Although it&amp;rsquo;s not legally required, I ask that anyone who shares generated text via gpt-2-simple add a link to the repo and/or Colaboratory notebook not just for attribution, but to &lt;em&gt;spread knowledge&lt;/em&gt; about the accessibility of AI text generation. It&amp;rsquo;s a technology that should be transparent, not obfuscated for personal gain.&lt;/p&gt;
&lt;h2 id=&#34;the-future-of-gpt-2&#34;&gt;The Future of GPT-2&lt;/h2&gt;
&lt;p&gt;Hopefully, this article gave you ideas on how to finetune and generate texts creatively. There&amp;rsquo;s still a &lt;em&gt;lot&lt;/em&gt; of untapped potential, and there are still many cool applications that have been untouched, and many cool datasets that haven&amp;rsquo;t been used for AI text generation. GPT-2 will likely be used more for mass-producing &lt;a href=&#34;https://twitter.com/Fred_Delicious/status/1166783214750445573&#34; target=&#34;_blank&#34;&gt;crazy erotica&lt;/a&gt; than fake news.&lt;/p&gt;
&lt;p&gt;However, GPT-2 and the Transformer architecture aren&amp;rsquo;t the end-game of AI text generation. Not by a long shot.&lt;/p&gt;</description></item></channel></rss>